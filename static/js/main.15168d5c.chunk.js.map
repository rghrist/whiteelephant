{"version":3,"sources":["components/ListItem.js","components/ListContainer.js","components/Round.js","components/RoundHistory.js","components/Names.js","components/Items.js","components/DropdownItem.js","App.js","serviceWorker.js","index.js"],"names":["ListItem","_this$props","this","props","myKey","value","react_default","a","createElement","key","Component","ListContainer","items","Round","round","components_ListContainer","actions","className","onClick","updateRound","RoundHistory","formattedHistory","Names","onFormSubmit","event","preventDefault","_this","addPlayer","names","selectedName","onChange","onSubmit","type","name","placeholder","data-toggle","Items","addGift","gifts","selectedGift","DropdownItem","selectItem","style","color","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","roundNumber","state","roundHistory","concat","toConsumableArray","stolenItems","updateStolenCount","newStolen","objectSpread","console","log","oldCount","find","k","setName","setGift","gift","addName","newName","newGift","submitAction","toUpperCase","filterStolen","stolen","keys","reduce","o","_this2","filteredStolen","sortedNames","sort","formattedActions","map","t","components_ListItem","formattedSteals","entries","formattedNames","components_DropdownItem","formattedGifts","components_Round","height","backgroundColor","components_RoundHistory","display","justifyContent","alignItems","components_Names","e","target","components_Items","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sPAWeA,mLARF,IAAAC,EACoBC,KAAKC,MAAtBC,EADHH,EACGG,MAAOC,EADVJ,EACUI,MACf,OACIC,EAAAC,EAAAC,cAAA,MAAIC,IAAML,GAAUC,UAJTK,aCURC,mLARP,OACIL,EAAAC,EAAAC,cAAA,WACMN,KAAKC,MAAMS,cAJDF,aCcbG,mLAXP,OACIP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBAAaN,KAAKC,MAAMW,OACpBR,EAAAC,EAAAC,cAACO,EAAD,CAAeH,MAAQV,KAAKC,MAAMa,UAClCV,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQS,UAAU,kBAAkBC,QAAShB,KAAKC,MAAMgB,aAAxD,wBAPAT,aCWLU,mLATP,OACId,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACO,EAAD,CAAeH,MAAQV,KAAKC,MAAMkB,2BALvBX,aC0BZY,6MA1BXC,aAAe,SAACC,GACZA,EAAMC,iBACNC,EAAKvB,MAAMwB,qFAGN,IAAA1B,EAC4CC,KAAKC,MAA9CyB,EADH3B,EACG2B,MAAOC,EADV5B,EACU4B,aAAcxB,EADxBJ,EACwBI,MAAOyB,EAD/B7B,EAC+B6B,SACpC,OACIxB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uCACXX,EAAAC,EAAAC,cAAA,QAAMuB,SAAU7B,KAAKqB,cACjBjB,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,OAAOC,KAAK,aAAaC,YAAY,iBAAiB7B,MAAQA,EAAQyB,SAAWA,KAEjGxB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YACXX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,kCAAkCe,KAAK,SAASG,cAAY,YAA9E,OACI7B,EAAAC,EAAAC,cAAA,QAAMS,UAAU,WAEpBX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBACRW,IATd,SAYOC,UArBCnB,aC4BL0B,6MA3BXb,aAAe,SAACC,GACZA,EAAMC,iBACNC,EAAKvB,MAAMkC,mFAGN,IAAApC,EAC4CC,KAAKC,MAA9CmC,EADHrC,EACGqC,MAAOC,EADVtC,EACUsC,aAAclC,EADxBJ,EACwBI,MAAOyB,EAD/B7B,EAC+B6B,SAEpC,OACIxB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uCACXX,EAAAC,EAAAC,cAAA,QAAMuB,SAAU7B,KAAKqB,cACjBjB,EAAAC,EAAAC,cAAA,SAAOwB,KAAK,OAAOC,KAAK,aAAaC,YAAY,eAAe7B,MAAQA,EAAQyB,SAAWA,KAEnGxB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACXX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,+BAA+Be,KAAK,SAASG,cAAY,YAA3E,QACS7B,EAAAC,EAAAC,cAAA,QAAMS,UAAU,WAEzBX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,iBACRqB,IATV,SAYOC,UAtBC7B,aCWL8B,mLAVF,IAAAvC,EACgCC,KAAKC,MAAlCC,EADHH,EACGG,MAAOC,EADVJ,EACUI,MAAOoC,EADjBxC,EACiBwC,WACtB,OACInC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQS,UAAU,kBAAkByB,MAAO,CAACC,MAAO,SAAUlC,IAAML,EAAQc,QAAU,kBAAMuB,EAAYrC,KAAYC,WALxGK,aCyHZkC,cAjHb,SAAAA,IAAa,IAAAlB,EAAA,OAAAmB,OAAAC,EAAA,EAAAD,CAAA3C,KAAA0C,IACXlB,EAAAmB,OAAAE,EAAA,EAAAF,CAAA3C,KAAA2C,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA/C,QAaFiB,YAAc,WACZO,EAAKwB,SAAS,CAAEC,YAAazB,EAAK0B,MAAMD,YAAc,EACtCE,aAAY,GAAAC,OAAAT,OAAAU,EAAA,EAAAV,CAAMnB,EAAK0B,MAAMC,cAAjBR,OAAAU,EAAA,EAAAV,CAAkCnB,EAAK0B,MAAMpC,UACzDA,QAAS,GACTwC,YAAa,MAlBlB9B,EAqBb+B,kBAAoB,WAClB,IAAMC,EAASb,OAAAc,EAAA,EAAAd,CAAA,GAAOnB,EAAK0B,MAAMI,aAC3BjB,EAAeb,EAAK0B,MAAMb,aAEhC,GADAqB,QAAQC,IAAInC,EAAK0B,MAAMd,OACnBC,KAAgBmB,EAAU,CAC5B,IAAMI,EAAWJ,EAAUnB,GAC3BmB,EAAUnB,GAAgBuB,EAAW,EACrCpC,EAAKwB,SAAS,CAAEM,YAAaE,SACpBhC,EAAK0B,MAAMd,MAAMyB,KAAK,SAAAC,GAAC,OAAIA,IAAMzB,KAC1CmB,EAAUnB,GAAgB,EAC1Bb,EAAKwB,SAAS,CAAEM,YAAaE,MAE7BA,EAAUnB,GAAgB,EAC1Bb,EAAKwB,SAAS,CAAEM,YAAaE,KAE/BE,QAAQC,IAAInC,EAAK0B,MAAMI,cApCZ9B,EAuCbuC,QAAU,SAAChC,GACTP,EAAKwB,SAAS,CAAErB,aAAcI,KAxCnBP,EA2CbwC,QAAU,SAACC,GACTzC,EAAKwB,SAAS,CAAEX,aAAc4B,KA5CnBzC,EA+Cb0C,QAAU,WACR1C,EAAKwB,SAAS,CAAErB,aAAcH,EAAK0B,MAAMiB,UACzC3C,EAAKwB,SAAS,CAAEtB,MAAK,GAAA0B,OAAAT,OAAAU,EAAA,EAAAV,CAAMnB,EAAK0B,MAAMxB,OAAjB,CAAwBF,EAAK0B,MAAMiB,UAAUA,QAAS,MAjDhE3C,EAoDbW,QAAU,WACRX,EAAKwB,SAAS,CAAEX,aAAcb,EAAK0B,MAAMkB,UACzC5C,EAAKwB,SAAS,CAAEZ,MAAK,GAAAgB,OAAAT,OAAAU,EAAA,EAAAV,CAAMnB,EAAK0B,MAAMd,OAAjB,CAAwBZ,EAAK0B,MAAMkB,UAChCA,QAAS,MAvDtB5C,EA4Db6C,aAAe,WACb7C,EAAKwB,SAAS,CAAElC,QAAO,GAAAsC,OAAAT,OAAAU,EAAA,EAAAV,CAAMnB,EAAK0B,MAAMpC,SAAjB,WAAAsC,OAAoC5B,EAAK0B,MAAMD,YAA/C,OAAAG,OAAgE5B,EAAK0B,MAAMvB,aAAa2C,cAAxF,UAAAlB,OAA8G5B,EAAK0B,MAAMb,aAAaiC,iBAC7IjC,aAAc,GAAIV,aAAc,KAChDH,EAAK+B,qBA/DM/B,EAkEb+C,aAAe,WACb,IAAMC,EAAShD,EAAK0B,MAAMI,YAM1B,OALeX,OAAO8B,KAAKD,GACJE,OAAO,SAACC,EAAGpE,GAEV,OADgB,IAAhBiE,EAAOjE,KAAeoE,EAAEpE,GAAOiE,EAAOjE,IAC/BoE,GACJ,KAtE3BnD,EAAK0B,MAAQ,CAAED,YAAa,EACZkB,QAAS,GACTzC,MAAO,GACPU,MAAO,GACPgC,QAAS,GACTjB,aAAc,GACdrC,QAAS,GACTa,aAAc,GACdU,aAAc,GACdiB,YAAa,IAXlB9B,wEA4EJ,IAAAoD,EAAA5E,KACD6E,EAAiB7E,KAAKuE,eACtBO,EAAc9E,KAAKkD,MAAMxB,MAAMqD,OAE/BC,EAAmBhF,KAAKkD,MAAMpC,QAAQmE,IAAI,SAAAC,GAAC,OAAI9E,EAAAC,EAAAC,cAAC6E,EAAD,CAAU5E,IAAK2E,EAAGhF,MAAOgF,EAAG/E,MAAO+E,MAClF/D,EAAmBnB,KAAKkD,MAAMC,aAAa8B,IAAI,SAAAC,GAAC,OAAI9E,EAAAC,EAAAC,cAAC6E,EAAD,CAAU5E,IAAK2E,EAAGhF,MAAOgF,EAAG/E,MAAO+E,MACvFE,EAAkBzC,OAAO0C,QAAQR,GAAgBI,IAAI,SAAAC,GAAC,OAAI9E,EAAAC,EAAAC,cAAC6E,EAAD,CAAU5E,IAAK2E,EAAGhF,MAAOgF,EAAG/E,MAAO+E,MAC7FI,EAAiBR,EAAYG,IAAI,SAAAC,GAAC,OAAI9E,EAAAC,EAAAC,cAACiF,EAAD,CAAchF,IAAK2E,EAAG3C,WAAY,kBAAMqC,EAAKb,QAAQmB,IAAIhF,MAAOgF,EAAG/E,MAAO+E,MAChHM,EAAiBxF,KAAKkD,MAAMd,MAAM6C,IAAI,SAAAC,GAAC,OAAI9E,EAAAC,EAAAC,cAACiF,EAAD,CAAchF,IAAK2E,EAAG3C,WAAYqC,EAAKZ,QAAS9D,MAAOgF,EAAG/E,MAAO+E,MAQlH,OACE9E,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uCACbX,EAAAC,EAAAC,cAACmF,EAAD,CAAO7E,MAAQZ,KAAKkD,MAAMD,YAAcnC,QAAUkE,EAAmB/D,YAAcjB,KAAKiB,cACxFb,EAAAC,EAAAC,cAAA,MAAIkC,MAAO,CAAEkD,OAAQ,OAAQC,gBAAiB,WAC9CvF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACO,EAAD,CAAeH,MAAQ0E,IACvBhF,EAAAC,EAAAC,cAACsF,EAAD,CAAczE,iBAAmBA,KAEnCf,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sCAAsCyB,MAf/B,CACxBqD,QAAS,OACTC,eAAgB,eAChBC,WAAY,WAaR3F,EAAAC,EAAAC,cAAC0F,EAAD,CAAOtE,MAAQ4D,EAAiB3D,aAAc3B,KAAKkD,MAAMvB,aAAcxB,MAAOH,KAAKkD,MAAMiB,QAASvC,SAAU,SAACqE,GAAD,OAAOrB,EAAK5B,SAAS,CAAEmB,QAAS8B,EAAEC,OAAO/F,SAAUsB,UAAWzB,KAAKkE,UAC/K9D,EAAAC,EAAAC,cAAC6F,EAAD,CAAO/D,MAAQoD,EAAiBnD,aAAcrC,KAAKkD,MAAMb,aAAclC,MAAOH,KAAKkD,MAAMkB,QAASxC,SAAU,SAACqE,GAAD,OAAOrB,EAAK5B,SAAS,CAAEoB,QAAS6B,EAAEC,OAAO/F,SAAUgC,QAASnC,KAAKmC,UAC7K/B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kDACbX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,kBAAkBC,QAAShB,KAAKqE,cAAlD,oBA1GM7D,aCGE4F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtG,EAAAC,EAAAC,cAACqG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.15168d5c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ListItem extends Component {\n    render() {\n        const { myKey, value } = this.props;\n        return (\n            <li key={ myKey }>{ value }</li>\n        );\n    }\n}\n\nexport default ListItem;","import React, { Component } from 'react';\n\nclass ListContainer extends Component {\n    render() {\n        return (\n            <div>\n                { this.props.items }\n            </div>\n        );\n    }\n}\n\nexport default ListContainer;","import React, { Component } from 'react';\nimport ListContainer from './ListContainer';\n\nclass Round extends Component {\n    render() {\n        return (\n            <div>\n                <h3> Round { this.props.round }</h3>\n                    <ListContainer items={ this.props.actions } />\n                    <br></br>\n                    <button className=\"btn btn-primary\" onClick={this.props.updateRound}>Update Round</button>\n            </div>\n        );\n    }\n}\n\nexport default Round;","import React, { Component } from 'react';\nimport ListContainer from './ListContainer';\n\nclass RoundHistory extends Component {\n    render() {\n        return (\n            <div>\n                <h4>Round History</h4>\n                <ListContainer items={ this.props.formattedHistory } />\n            </div>\n        );\n    }\n}\n\nexport default RoundHistory;","import React, { Component } from 'react';\n\nclass Names extends Component {\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        this.props.addPlayer();\n    };\n\n    render() {\n        const { names, selectedName, value, onChange } = this.props;\n        return (\n            <div className=\"col-lg-3 col-sm-3 col-sm-3 col-xs-3\">\n                <form onSubmit={this.onFormSubmit}>\n                    <input type=\"text\" name=\"new player\" placeholder=\"Add new player\" value={ value } onChange={ onChange }/>\n                </form>\n                <div className=\"dropdown\">\n                    <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                    Name<span className=\"caret\"></span>\n                    </button> \n                    <ul className=\"dropdown-menu\">\n                        { names }\n                    </ul>\n                </div>\n            Name: {selectedName}\n            </div>\n        );\n    }\n}\n\nexport default Names;","import React, { Component } from 'react';\n\nclass Items extends Component {\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        this.props.addGift();\n    };\n\n    render() {\n        const { gifts, selectedGift, value, onChange } = this.props;\n\n        return (\n            <div className=\"col-lg-3 col-sm-3 col-sm-3 col-xs-3\">\n                <form onSubmit={this.onFormSubmit}>\n                    <input type=\"text\" name=\"new player\" placeholder=\"Add new gift\" value={ value } onChange={ onChange }/>\n                </form>\n            <div className=\" dropdown\">\n                <button className=\"btn btn-info dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                    Items<span className=\"caret\"></span>\n                </button> \n                <ul className=\"dropdown-menu\">\n                    { gifts }\n                </ul>\n            </div>\n            Gift: {selectedGift}\n            </div>\n        );\n    }\n}\n\nexport default Items;","import React, { Component } from 'react';\n\nclass DropdownItem extends Component {\n    render() {\n        const { myKey, value, selectItem } = this.props;\n        return (\n            <div>\n                <button className=\"btn btn-warning\" style={{color: 'black'}} key={ myKey } onClick={ () => selectItem( myKey ) }>{ value }</button>\n            </div>\n        );\n    }\n}\n\nexport default DropdownItem;","import React, { Component } from 'react';\nimport ListItem from './components/ListItem';\nimport Round from './components/Round';\nimport RoundHistory from './components/RoundHistory';\nimport Names from './components/Names';\nimport Items from './components/Items';\nimport DropDownItem from './components/DropdownItem';\nimport ListContainer from './components/ListContainer';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = { roundNumber: 1, \n                    newName: '',\n                    names: [], \n                    gifts: [],\n                    newGift: '',\n                    roundHistory: [],\n                    actions: [],\n                    selectedName: '',\n                    selectedGift: '',\n                    stolenItems: {}}\n  }\n\n  updateRound = () => {\n    this.setState({ roundNumber: this.state.roundNumber + 1,\n                    roundHistory: [...this.state.roundHistory, ...this.state.actions],\n                    actions: [],\n                    stolenItems: {}});\n  }\n\n  updateStolenCount = () => {\n    const newStolen = {...this.state.stolenItems};\n    const selectedGift = this.state.selectedGift\n    console.log(this.state.gifts)\n    if (selectedGift in newStolen){\n      const oldCount = newStolen[selectedGift];\n      newStolen[selectedGift] = oldCount + 1;\n      this.setState({ stolenItems: newStolen})\n    } else if (this.state.gifts.find(k => k === selectedGift)) {\n      newStolen[selectedGift] = 1;\n      this.setState({ stolenItems: newStolen })\n    } else {\n      newStolen[selectedGift] = 0;\n      this.setState({ stolenItems: newStolen })\n    }\n    console.log(this.state.stolenItems);\n  }\n\n  setName = (name) => {\n    this.setState({ selectedName: name});\n  }\n\n  setGift = (gift) => {\n    this.setState({ selectedGift: gift});\n  }\n\n  addName = () => {\n    this.setState({ selectedName: this.state.newName});\n    this.setState({ names: [...this.state.names, this.state.newName], newName: ''});\n  }\n\n  addGift = () => {\n    this.setState({ selectedGift: this.state.newGift});\n    this.setState({ gifts: [...this.state.gifts, this.state.newGift],\n                            newGift: '',\n                            })\n                \n  }\n\n  submitAction = () => {\n    this.setState({ actions: [...this.state.actions, `Round #${this.state.roundNumber} : ${this.state.selectedName.toUpperCase()} gets ${this.state.selectedGift.toUpperCase()}`],\n                    selectedGift: '', selectedName: ''})\n    this.updateStolenCount();\n  }\n\n  filterStolen = () => {\n    const stolen = this.state.stolenItems;\n    const result = Object.keys(stolen)\n                          .reduce((o, key) => {\n                            stolen[key] !== 0 && (o[key] = stolen[key]);\n                            return o;\n                            }, {});\n    return result;\n  }\n\n  render() {\n    const filteredStolen = this.filterStolen();\n    const sortedNames = this.state.names.sort();\n\n    const formattedActions = this.state.actions.map(t => <ListItem key={t} myKey={t} value={t} />);\n    const formattedHistory = this.state.roundHistory.map(t => <ListItem key={t} myKey={t} value={t} />);\n    const formattedSteals = Object.entries(filteredStolen).map(t => <ListItem key={t} myKey={t} value={t} />)\n    const formattedNames = sortedNames.map(t => <DropDownItem key={t} selectItem={() => this.setName(t)} myKey={t} value={t} />);\n    const formattedGifts = this.state.gifts.map(t => <DropDownItem key={t} selectItem={this.setGift} myKey={t} value={t} />);\n\n    const controlPanelStyle = {\n      display: 'flex',\n      justifyContent: 'space-around',\n      alignItems: 'center'\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"col-lg-5 col-md-5 col-sm-5 col-xs-5\" >\n          <Round round={ this.state.roundNumber } actions={ formattedActions } updateRound={ this.updateRound} />\n          <hr style={{ height: '10px', backgroundColor: 'black'}}></hr>\n          <h4>Steal Counts:</h4>\n          <ListContainer items={ formattedSteals }/>\n          <RoundHistory formattedHistory={ formattedHistory } />\n        </div>\n        <div className=\"col-lg-7 col-sm-7 col-sm-7 col-xs-7\" style={ controlPanelStyle }>\n          <Names names={ formattedNames } selectedName={this.state.selectedName} value={this.state.newName} onChange={(e) => this.setState({ newName: e.target.value })} addPlayer={this.addName}/>\n          <Items gifts={ formattedGifts } selectedGift={this.state.selectedGift} value={this.state.newGift} onChange={(e) => this.setState({ newGift: e.target.value })} addGift={this.addGift}/>\n          <div className=\"col-lg-1 col-sm-1 col-sm-1 col-xs-1 pull-right\">\n            <button className=\"btn btn-success\" onClick={this.submitAction}>Submit</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}